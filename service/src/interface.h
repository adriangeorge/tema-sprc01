/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _INTERFACE_H_RPCGEN
#define _INTERFACE_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C" {
#endif

struct client_req_auth {
	char *c_id;
};
typedef struct client_req_auth client_req_auth;

struct client_req_signature {
	char *request_token;
};
typedef struct client_req_signature client_req_signature;

struct client_req_bearer_token {
	char *c_auth_token;
	char *c_refresh_token;
};
typedef struct client_req_bearer_token client_req_bearer_token;

struct client_req_op {
	char *c_access_token;
	char *op;
	char *resource;
};
typedef struct client_req_op client_req_op;

struct server_res_token {
	int status;
	int token_ttl;
	char *token;
	char *ref_token;
};
typedef struct server_res_token server_res_token;

struct server_res_op {
	char *status;
};
typedef struct server_res_op server_res_op;

#define SPRC_HW 123456789
#define SPRC_HW_VER 1

#if defined(__STDC__) || defined(__cplusplus)
#define req_auth 1
extern server_res_token *req_auth_1(client_req_auth *, CLIENT *);
extern server_res_token *req_auth_1_svc(client_req_auth *, struct svc_req *);
#define approve_req_token 2
extern server_res_token *approve_req_token_1(client_req_signature *, CLIENT *);
extern server_res_token *approve_req_token_1_svc(client_req_signature *,
						 struct svc_req *);
#define req_bearer_token 3
extern server_res_token *req_bearer_token_1(client_req_bearer_token *,
					    CLIENT *);
extern server_res_token *req_bearer_token_1_svc(client_req_bearer_token *,
						struct svc_req *);
#define req_bearer_token_refresh 4
extern server_res_token *req_bearer_token_refresh_1(client_req_bearer_token *,
						    CLIENT *);
extern server_res_token *
req_bearer_token_refresh_1_svc(client_req_bearer_token *, struct svc_req *);
#define validate_delegated_action 5
extern server_res_op *validate_delegated_action_1(client_req_op *, CLIENT *);
extern server_res_op *validate_delegated_action_1_svc(client_req_op *,
						      struct svc_req *);
extern int sprc_hw_1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define req_auth 1
extern server_res_token *req_auth_1();
extern server_res_token *req_auth_1_svc();
#define approve_req_token 2
extern server_res_token *approve_req_token_1();
extern server_res_token *approve_req_token_1_svc();
#define req_bearer_token 3
extern server_res_token *req_bearer_token_1();
extern server_res_token *req_bearer_token_1_svc();
#define req_bearer_token_refresh 4
extern server_res_token *req_bearer_token_refresh_1();
extern server_res_token *req_bearer_token_refresh_1_svc();
#define validate_delegated_action 5
extern server_res_op *validate_delegated_action_1();
extern server_res_op *validate_delegated_action_1_svc();
extern int sprc_hw_1_freeresult();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern bool_t xdr_client_req_auth(XDR *, client_req_auth *);
extern bool_t xdr_client_req_signature(XDR *, client_req_signature *);
extern bool_t xdr_client_req_bearer_token(XDR *, client_req_bearer_token *);
extern bool_t xdr_client_req_op(XDR *, client_req_op *);
extern bool_t xdr_server_res_token(XDR *, server_res_token *);
extern bool_t xdr_server_res_op(XDR *, server_res_op *);

#else /* K&R C */
extern bool_t xdr_client_req_auth();
extern bool_t xdr_client_req_signature();
extern bool_t xdr_client_req_bearer_token();
extern bool_t xdr_client_req_op();
extern bool_t xdr_server_res_token();
extern bool_t xdr_server_res_op();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_INTERFACE_H_RPCGEN */
